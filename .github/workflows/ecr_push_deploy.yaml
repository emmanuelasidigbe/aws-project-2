name: Build and Push Docker Image
on:
  push:
    branches:
      - main
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1
      - name: Login to Amazon ECR Private
        run: |
          aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin 941377159625.dkr.ecr.eu-north-1.amazonaws.com
      - name: Build Docker Image
        run: |
          docker build -t docker/project .
      - name: Tag Docker Image for Private ECR
        run: |
          docker tag docker/project:latest 941377159625.dkr.ecr.eu-north-1.amazonaws.com/docker/project:latest
      - name: Push Docker Image to ECR
        run: |
          docker push 941377159625.dkr.ecr.eu-north-1.amazonaws.com/docker/project:latest
      # - name: Create CodeDeploy Deployment
      #   run: |
      #     aws deploy create-deployment \
      #       --application-name AppECS-imagine-cluster-imagine-service \
      #       --deployment-group-name DgpECS-imagine-cluster-imagine-service \
      #       --deployment-config-name CodeDeployDefault.ECSAllAtOnce \
      #       --revision "{\"revisionType\": \"AppSpecContent\", \"appSpecContent\": { \"content\": \"$(jq -c . appspec.json | sed 's/"/\\"/g')\" } }"
